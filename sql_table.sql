-- create datbase
CREATE DATABASE IF NOT EXISTS MUSIC;

USE MUSIC;

-- create table artist

CREATE TABLE IF NOT EXISTS ARTIST(
    ARTIST_ID INT NOT NULL PRIMARY KEY,
    ARTIST_NAME CHAR(200),
    DATE_OF_BIRTH VARCHAR(20),
    HOMETOWN VARCHAR(20),
    CITY CHAR(20),
    STATE VARCHAR(20),
    COUNTRY VARCHAR(20),
    BIOGRAPHY CHAR(200),
    WEBSITE VARCHAR(100)
);

-- create table song
CREATE TABLE IF NOT EXISTS SONG (
    SONG_ID INT NOT NULL PRIMARY KEY,
    ALBUM_ID INT,
    ARTIST_ID INT,
    SONG_TITLE VARCHAR(200),
    GENRE VARCHAR(20),
    LENGTH VARCHAR(100),
    ROLE VARCHAR(100), -- Add a column for artist's role in the song
    FOREIGN KEY (ALBUM_ID) REFERENCES ALBUM(ALBUM_ID),
    FOREIGN KEY (ARTIST_ID) REFERENCES ARTIST(ARTIST_ID)
);
 -- create table album
 CREATE TABLE IF NOT EXISTS ALBUM(
    ALBUM_ID INT NOT NULL PRIMARY KEY,
    ALBUM_TITLE VARCHAR(20),
    NUMBER_OF_TRACKS VARCHAR(10),
    FORMAT_ VARCHAR(20),
    SONG_ID INT,
    FOREIGN KEY (SONG_ID) REFERENCES SONG(SONG_ID)
);
 -- create table record_company
 CREATE TABLE IF NOT EXISTS RECORD_COMPANY (
    RECORD_C_ID INT NOT NULL PRIMARY KEY,
    RECORD_COMPANY_NAME CHAR(100),
    ADDRESS VARCHAR(20),
    PHONE VARCHAR(20),
    WEBSITE VARCHAR(100),
    ALBUM_ID INT,
    YEAR INT,
    FOREIGN KEY (ALBUM_ID) REFERENCES ALBUM(ALBUM_ID)
);
 -- create table music_chart
 CREATE TABLE IF NOT EXISTS MUSIC_CHART(
    MUSIC_CHART_ID INT NOT NULL PRIMARY KEY,
    CHART_NAME VARCHAR(100),
    WEEK VARCHAR(20),
    RANK VARCHAR(10),
    SONG_ID INT,
    FOREIGN KEY (SONG_ID) REFERENCES SONG(SONG_ID)
);